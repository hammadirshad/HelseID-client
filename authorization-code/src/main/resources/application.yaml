spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${helseid.sts.uri}/.well-known/openid-configuration/jwks
          issuer-uri: ${helseid.sts.uri}
      client:
        detail:
          registration:
            helseid-code:
              end_session_endpoint: ${helseid.sts.uri}/connect/endsession
              post-logout-redirect-uri: http://localhost:${server.port}/logget-ut
              base-redirect-uri: /callback
              private-key: private-key-code.json
        registration:
          helseid-code:
            client-id: helseid-sample-refresh-token
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            scope: [ 'openid', 'profile', 'offline_access', 'helseid://scopes/identity/pid', 'helseid://scopes/identity/security_level' ]
            client-name: ${helseid.registration-name.login}
            redirect-uri: http://localhost:${server.port}/callback
        provider:
          helseid-code:
            issuer-uri: ${helseid.sts.uri}
            authorization-uri: ${helseid.sts.uri}/connect/authorize?acr_values=Level3
            token-uri: ${helseid.sts.uri}/connect/token
            user-info-uri: ${helseid.sts.uri}/connect/userinfo
            jwk-set-uri: ${helseid.sts.uri}/.well-known/openid-configuration/jwks
            user-name-attribute: sub
helseid:
  registration-name:
    login: helseid-code
  sts:
    uri: https://helseid-sts.test.nhn.no

server:
  port: 8089
#  ssl:
#    key-store: classpath:key-store.p12
#    key-store-password: password
#    key-alias: baeldung